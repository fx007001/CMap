{"code":"export function initAMap() {\r\n    const AMap = window.AMap || {};\r\n    const { id, points = [116.404, 39.915], areaName, zoom = 10, isScaleCtrl = false, isZoomCtrl = false, navi3DCtrl = false, // 添加3D控件\r\n    enclosure = {}, drivingType, drivingPath = [], } = this.$options;\r\n    const map = new AMap.Map(id, {\r\n        center: points,\r\n        resizeEnable: true,\r\n        zoom\r\n    });\r\n    if (isScaleCtrl) {\r\n        map.addControl(new AMap.Scale({\r\n            visible: isScaleCtrl\r\n        }));\r\n    }\r\n    if (isZoomCtrl) {\r\n        map.addControl(new AMap.ToolBar({\r\n            visible: isZoomCtrl,\r\n            position: {\r\n                bottom: '60px',\r\n                right: '40px'\r\n            }\r\n        }));\r\n    }\r\n    if (navi3DCtrl) {\r\n        map.addControl(new AMap.MapType());\r\n    }\r\n    // 使用路径搜索展示\r\n    if (drivingType === 'path' && drivingPath.length > 2) {\r\n        AMap.plugin(['AMap.DragRoute'], function () {\r\n            const path = [];\r\n            for (let i = 0; i < drivingPath.length; i++) {\r\n                path.push([drivingPath[i].lng, drivingPath[i].lat]);\r\n            }\r\n            const route = new AMap.DragRoute(map, path, AMap.DrivingPolicy.LEAST_FEE);\r\n            route.search();\r\n        });\r\n    }\r\n    if (drivingPath && drivingPath.length > 2) {\r\n        // 折线的节点坐标数组，每个元素为 AMap.LngLat 对象\r\n        let path = [];\r\n        for (let i = 0; i < drivingPath.length; i++) {\r\n            path.push(new AMap.LngLat(drivingPath[i].lng, drivingPath[i].lat));\r\n        }\r\n        // console.log()\r\n        // 创建折线实例\r\n        const polyline = new AMap.Polyline({\r\n            path: path,\r\n            strokeColor: \"#6699FF\",\r\n            strokeWeight: 6,\r\n            strokeOpacity: 0.9,\r\n            zIndex: 50,\r\n            bubble: true,\r\n        });\r\n        const startIcon = new AMap.Icon({\r\n            // 图标尺寸\r\n            size: new AMap.Size(25, 34),\r\n            // 图标的取图地址\r\n            image: '//a.amap.com/jsapi_demos/static/demo-center/icons/dir-marker.png',\r\n            // 图标所用图片大小\r\n            imageSize: new AMap.Size(135, 40),\r\n            // 图标取图偏移量\r\n            imageOffset: new AMap.Pixel(-9, -3)\r\n        });\r\n        // 将 开始 icon 传入 marker\r\n        const startMarker = new AMap.Marker({\r\n            position: new AMap.LngLat(drivingPath[0].lng, drivingPath[0].lat),\r\n            icon: startIcon,\r\n            offset: new AMap.Pixel(-13, -30)\r\n        });\r\n        // 创建一个 icon\r\n        const endIcon = new AMap.Icon({\r\n            size: new AMap.Size(25, 34),\r\n            image: '//a.amap.com/jsapi_demos/static/demo-center/icons/dir-marker.png',\r\n            imageSize: new AMap.Size(135, 40),\r\n            imageOffset: new AMap.Pixel(-95, -3)\r\n        });\r\n        const endPint = drivingPath.at(-1);\r\n        // 将 icon 传入 marker\r\n        const endMarker = new AMap.Marker({\r\n            position: new AMap.LngLat(endPint.lng, endPint.lat),\r\n            icon: endIcon,\r\n            offset: new AMap.Pixel(-13, -30)\r\n        });\r\n        map.add(startMarker);\r\n        map.add(polyline);\r\n        map.add(endMarker);\r\n        map.setFitView(); // 缩放地图到合适的视野级别\r\n    }\r\n    // 多边形轮廓线的节点坐标数组\r\n    if (enclosure && enclosure.points) {\r\n        const { points, fillColor = '#6699FF', fillOpacity = 0.3, strokeColor = '#6699FF', borderWeight = 2, } = enclosure;\r\n        let path = [];\r\n        for (let i = 0; i < points.length; i++) {\r\n            path.push(new AMap.LngLat(points[i].lng, points[i].lat));\r\n        }\r\n        const polygon = new AMap.Polygon({\r\n            path: path,\r\n            fillColor,\r\n            borderWeight,\r\n            strokeColor,\r\n            fillOpacity, // 多边形填充颜色透明度\r\n        });\r\n        map.add(polygon);\r\n        map.setFitView();\r\n    }\r\n    // 圆形\r\n    if (enclosure && enclosure.point) {\r\n        const { point, radius, fillColor = '#6699FF', fillOpacity = 0.3, strokeColor = '#6699FF', strokeWeight = 2, } = enclosure;\r\n        const circle = new AMap.Circle({\r\n            center: new AMap.LngLat(point[0], point[1]),\r\n            radius,\r\n            fillColor,\r\n            fillOpacity,\r\n            strokeColor,\r\n            strokeWeight, // 描边宽度\r\n        });\r\n        map.add(circle);\r\n        map.setFitView();\r\n    }\r\n}\r\n","references":[]}
