{"code":"export default function initAMap() {\r\n    var AMap = window.AMap || {};\r\n    var _a = this.$options, id = _a.id, _b = _a.points, points = _b === void 0 ? [116.404, 39.915] : _b, areaName = _a.areaName, _c = _a.zoom, zoom = _c === void 0 ? 10 : _c, _d = _a.isScaleCtrl, isScaleCtrl = _d === void 0 ? false : _d, _e = _a.isZoomCtrl, isZoomCtrl = _e === void 0 ? false : _e, _f = _a.navi3DCtrl, navi3DCtrl = _f === void 0 ? false : _f, // 添加3D控件\r\n    _g = _a.enclosure, // 添加3D控件\r\n    enclosure = _g === void 0 ? {} : _g, drivingType = _a.drivingType, _h = _a.drivingPath, drivingPath = _h === void 0 ? [] : _h;\r\n    var map = new AMap.Map(id, {\r\n        center: points,\r\n        resizeEnable: true,\r\n        zoom: zoom\r\n    });\r\n    console.log(points !== null && points !== void 0 ? points : areaName);\r\n    if (isScaleCtrl) {\r\n        map.addControl(new AMap.Scale({\r\n            visible: isScaleCtrl\r\n        }));\r\n    }\r\n    if (isZoomCtrl) {\r\n        map.addControl(new AMap.ToolBar({\r\n            visible: isZoomCtrl,\r\n            position: {\r\n                bottom: '60px',\r\n                right: '40px'\r\n            }\r\n        }));\r\n    }\r\n    if (navi3DCtrl) {\r\n        map.addControl(new AMap.MapType());\r\n    }\r\n    // 使用路径搜索展示\r\n    if (drivingType === 'path' && drivingPath.length > 2) {\r\n        AMap.plugin(['AMap.DragRoute'], function () {\r\n            var path = [];\r\n            for (var i = 0; i < drivingPath.length; i++) {\r\n                path.push([drivingPath[i].lng, drivingPath[i].lat]);\r\n            }\r\n            var route = new AMap.DragRoute(map, path, AMap.DrivingPolicy.LEAST_FEE);\r\n            route.search();\r\n        });\r\n    }\r\n    if (drivingPath && drivingPath.length > 2) {\r\n        // 折线的节点坐标数组，每个元素为 AMap.LngLat 对象\r\n        var path_1 = [];\r\n        for (var i = 0; i < drivingPath.length; i++) {\r\n            path_1.push(new AMap.LngLat(drivingPath[i].lng, drivingPath[i].lat));\r\n        }\r\n        // console.log()\r\n        // 创建折线实例\r\n        var polyline = new AMap.Polyline({\r\n            path: path_1,\r\n            strokeColor: \"#6699FF\",\r\n            strokeWeight: 6,\r\n            strokeOpacity: 0.9,\r\n            zIndex: 50,\r\n            bubble: true\r\n        });\r\n        var startIcon = new AMap.Icon({\r\n            // 图标尺寸\r\n            size: new AMap.Size(25, 34),\r\n            // 图标的取图地址\r\n            image: '//a.amap.com/jsapi_demos/static/demo-center/icons/dir-marker.png',\r\n            // 图标所用图片大小\r\n            imageSize: new AMap.Size(135, 40),\r\n            // 图标取图偏移量\r\n            imageOffset: new AMap.Pixel(-9, -3)\r\n        });\r\n        // 将 开始 icon 传入 marker\r\n        var startMarker = new AMap.Marker({\r\n            position: new AMap.LngLat(drivingPath[0].lng, drivingPath[0].lat),\r\n            icon: startIcon,\r\n            offset: new AMap.Pixel(-13, -30)\r\n        });\r\n        // 创建一个 icon\r\n        var endIcon = new AMap.Icon({\r\n            size: new AMap.Size(25, 34),\r\n            image: '//a.amap.com/jsapi_demos/static/demo-center/icons/dir-marker.png',\r\n            imageSize: new AMap.Size(135, 40),\r\n            imageOffset: new AMap.Pixel(-95, -3)\r\n        });\r\n        var endPint = drivingPath.at(-1);\r\n        // 将 icon 传入 marker\r\n        var endMarker = new AMap.Marker({\r\n            position: new AMap.LngLat(endPint.lng, endPint.lat),\r\n            icon: endIcon,\r\n            offset: new AMap.Pixel(-13, -30)\r\n        });\r\n        map.add(startMarker);\r\n        map.add(polyline);\r\n        map.add(endMarker);\r\n        map.setFitView(); // 缩放地图到合适的视野级别\r\n    }\r\n    // 多边形轮廓线的节点坐标数组\r\n    if (enclosure && enclosure.points) {\r\n        var points_1 = enclosure.points, _j = enclosure.fillColor, fillColor = _j === void 0 ? '#6699FF' : _j, _k = enclosure.fillOpacity, fillOpacity = _k === void 0 ? 0.3 : _k, _l = enclosure.strokeColor, strokeColor = _l === void 0 ? '#6699FF' : _l, _m = enclosure.borderWeight, borderWeight = _m === void 0 ? 2 : _m;\r\n        var path = [];\r\n        for (var i = 0; i < points_1.length; i++) {\r\n            path.push(new AMap.LngLat(points_1[i].lng, points_1[i].lat));\r\n        }\r\n        var polygon = new AMap.Polygon({\r\n            path: path,\r\n            fillColor: fillColor,\r\n            borderWeight: borderWeight,\r\n            strokeColor: strokeColor,\r\n            fillOpacity: fillOpacity\r\n        });\r\n        map.add(polygon);\r\n        map.setFitView();\r\n    }\r\n    // 圆形\r\n    if (enclosure && enclosure.point) {\r\n        var point = enclosure.point, radius = enclosure.radius, _o = enclosure.fillColor, fillColor = _o === void 0 ? '#6699FF' : _o, _p = enclosure.fillOpacity, fillOpacity = _p === void 0 ? 0.3 : _p, _q = enclosure.strokeColor, strokeColor = _q === void 0 ? '#6699FF' : _q, _r = enclosure.strokeWeight, strokeWeight = _r === void 0 ? 2 : _r;\r\n        var circle = new AMap.Circle({\r\n            center: new AMap.LngLat(point[0], point[1]),\r\n            radius: radius,\r\n            fillColor: fillColor,\r\n            fillOpacity: fillOpacity,\r\n            strokeColor: strokeColor,\r\n            strokeWeight: strokeWeight\r\n        });\r\n        map.add(circle);\r\n        map.setFitView();\r\n    }\r\n}\r\n","references":[]}
