{"code":"import { __spreadArray } from \"tslib\";\r\nexport default function initBMap() {\r\n    var _a, _b, _c, _d, _e, _f;\r\n    var BMapGL = window.BMapGL || {}, BMapGLLib = window.BMapGL || {};\r\n    var _g = this.$options, id = _g.id, _h = _g.points, points = _h === void 0 ? [116.404, 39.915] : _h, areaName = _g.areaName, _j = _g.poiText, poiText = _j === void 0 ? true : _j, //是否显示POI信息 \r\n    _k = _g.poiIcon, //是否显示POI信息 \r\n    poiIcon = _k === void 0 ? true : _k, //是否显示POI图标信息 \r\n    _l = _g.zoom, //是否显示POI图标信息 \r\n    zoom = _l === void 0 ? 10 : _l, _m = _g.drivingPath, drivingPath = _m === void 0 ? [] : _m, _o = _g.enableScrollWheel, enableScrollWheel = _o === void 0 ? false : _o, _p = _g.isScaleCtrl, isScaleCtrl = _p === void 0 ? false : _p, _q = _g.isZoomCtrl, isZoomCtrl = _q === void 0 ? false : _q, _r = _g.navi3DCtrl, navi3DCtrl = _r === void 0 ? false : _r, // 添加3D控件\r\n    _s = _g.enclosure, // 添加3D控件\r\n    enclosure = _s === void 0 ? {} : _s, drivingType = _g.drivingType;\r\n    var map = new BMapGL.Map(id);\r\n    var point = this.$options.points && points.length === 2 ? new BMapGL.Point(points[0], points[1]) : null;\r\n    map.centerAndZoom(point !== null && point !== void 0 ? point : areaName, zoom);\r\n    map.enableScrollWheelZoom(enableScrollWheel);\r\n    map.setDisplayOptions({\r\n        poiText: poiText,\r\n        poiIcon: poiIcon\r\n    });\r\n    // 添加3D控件\r\n    if (navi3DCtrl) {\r\n        var ctrl3D = new BMapGL.NavigationControl3D();\r\n        map.addControl(ctrl3D);\r\n    }\r\n    // 添加比例尺控件\r\n    if (isScaleCtrl) {\r\n        var scaleCtrl = new BMapGL.ScaleControl();\r\n        map.addControl(scaleCtrl);\r\n    }\r\n    // 添加缩放控件\r\n    if (isZoomCtrl) {\r\n        var zoomCtrl = new BMapGL.ZoomControl();\r\n        map.addControl(zoomCtrl);\r\n    }\r\n    // 轨迹配置\r\n    if (drivingPath && drivingPath.length >= 2) {\r\n        var startPints = [drivingPath[0].lng, drivingPath[0].lat];\r\n        var endPints = [drivingPath.at(-1).lng, drivingPath.at(-1).lat];\r\n        // 起始结束点位计算路径\r\n        if (drivingType && drivingType === 'path') {\r\n            var start = new ((_a = BMapGL.Point).bind.apply(_a, __spreadArray([void 0], startPints, false)))();\r\n            var end = new ((_b = BMapGL.Point).bind.apply(_b, __spreadArray([void 0], endPints, false)))();\r\n            var driving = new BMapGL.DrivingRoute(map, {\r\n                renderOptions: {\r\n                    map: map,\r\n                    autoViewport: true\r\n                }\r\n            });\r\n            driving.search(start, end);\r\n        }\r\n        else {\r\n            map.centerAndZoom(new ((_c = BMapGL.Point).bind.apply(_c, __spreadArray([void 0], startPints, false)))());\r\n            var point_1 = [];\r\n            for (var i = 0; i < drivingPath.length; i++) {\r\n                point_1.push(new BMapGL.Point(drivingPath[i].lng, drivingPath[i].lat));\r\n            }\r\n            var pl_1 = new BMapGL.Polyline(point_1, {\r\n                strokeColor: \"#6699FF\",\r\n                strokeWeight: 6\r\n            });\r\n            var markerST = new BMapGL.Marker(new ((_d = BMapGL.Point).bind.apply(_d, __spreadArray([void 0], startPints, false)))(), {\r\n                title: '起点'\r\n            });\r\n            var markerEND = new BMapGL.Marker(new ((_e = BMapGL.Point).bind.apply(_e, __spreadArray([void 0], endPints, false)))(), {\r\n                title: '终点'\r\n            });\r\n            setTimeout(function () {\r\n                var trackAni = new BMapGLLib.TrackAnimation(map, pl_1, {\r\n                    overallView: true,\r\n                    tilt: 30,\r\n                    duration: 4000,\r\n                    delay: 300 // 动画开始的延迟，默认0，单位ms\r\n                });\r\n                trackAni.start();\r\n                map.addOverlay(markerST);\r\n                map.addOverlay(markerEND);\r\n            }, 1000);\r\n        }\r\n    }\r\n    // 围栏配置\r\n    if ((enclosure && enclosure.type === 'circle') || enclosure && enclosure.point) {\r\n        var _t = enclosure.fillColor, fillColor = _t === void 0 ? \"#6699FF\" : _t, _u = enclosure.fillOpacity, fillOpacity = _u === void 0 ? 0.3 : _u, _v = enclosure.strokeColor, strokeColor = _v === void 0 ? \"#6699FF\" : _v, _w = enclosure.strokeWeight, strokeWeight = _w === void 0 ? 2 : _w, _x = enclosure.strokeOpacity, strokeOpacity = _x === void 0 ? 1 : _x, point_2 = enclosure.point, radius = enclosure.radius;\r\n        var circle = new BMapGL.Circle(new ((_f = BMapGL.Point).bind.apply(_f, __spreadArray([void 0], point_2, false)))(), radius, {\r\n            fillColor: fillColor,\r\n            fillOpacity: fillOpacity,\r\n            strokeColor: strokeColor,\r\n            strokeWeight: strokeWeight,\r\n            strokeOpacity: strokeOpacity\r\n        });\r\n        map.addOverlay(circle); // 添加到地图中\r\n    }\r\n    else if (enclosure && enclosure.points || enclosure && enclosure.type === 'polygon') {\r\n        var _y = enclosure.fillColor, fillColor = _y === void 0 ? \"#6699FF\" : _y, _z = enclosure.fillOpacity, fillOpacity = _z === void 0 ? 0.3 : _z, _0 = enclosure.strokeColor, strokeColor = _0 === void 0 ? \"#6699FF\" : _0, _1 = enclosure.strokeWeight, strokeWeight = _1 === void 0 ? 2 : _1, _2 = enclosure.strokeOpacity, strokeOpacity = _2 === void 0 ? 1 : _2, _3 = enclosure.points, points_1 = _3 === void 0 ? [] : _3;\r\n        var pl = [];\r\n        for (var i = 0; i < points_1.length; i++) {\r\n            pl.push(new BMapGL.Point(points_1[i].lng, points_1[i].lat));\r\n        }\r\n        var polygon = new BMapGL.Polygon(pl, {\r\n            fillColor: fillColor,\r\n            fillOpacity: fillOpacity,\r\n            strokeColor: strokeColor,\r\n            strokeWeight: strokeWeight,\r\n            strokeOpacity: strokeOpacity\r\n        });\r\n        map.addOverlay(polygon);\r\n    }\r\n}\r\n","references":[]}
